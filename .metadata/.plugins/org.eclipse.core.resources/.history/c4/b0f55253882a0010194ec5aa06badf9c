#include <semaphore_sync.h>
#include "cmsis_os.h"
#include "stm32f4xx_hal.h"

#define LED_PIN     GPIO_PIN_5
#define LED_PORT    GPIOA

osSemaphoreId_t binarySemHandle;

void GPIO_Init(void) {
    __HAL_RCC_GPIOA_CLK_ENABLE();
    GPIO_InitTypeDef GPIO_InitStruct = {0};

    GPIO_InitStruct.Pin = LED_PIN;
    GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    HAL_GPIO_Init(LED_PORT, &GPIO_InitStruct);
}

void task1(void *argument) {
    for (;;) {
        osSemaphoreRelease(binarySemHandle);
        osDelay(1000);
    }
}

void task2(void *argument) {
    for (;;) {
        if (osSemaphoreAcquire(binarySemHandle, osWaitForever) == osOK) {
            HAL_GPIO_TogglePin(LED_PORT, LED_PIN);
        }
    }
}

void MX_FREERTOS_Init(void) {
    GPIO_Init();

    binarySemHandle = osSemaphoreNew(1, 0, NULL);

    osThreadNew(task1, NULL, NULL);
    osThreadNew(task2, NULL, NULL);
}
