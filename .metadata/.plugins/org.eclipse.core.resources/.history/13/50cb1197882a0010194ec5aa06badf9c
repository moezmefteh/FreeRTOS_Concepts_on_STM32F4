#include "semaphore_sync.h"

osSemaphoreId_t binarySemHandle;

void MX_GPIO_Init(void)
{
    __HAL_RCC_GPIOA_CLK_ENABLE();

    GPIO_InitTypeDef GPIO_InitStruct = {0};
    GPIO_InitStruct.Pin = GPIO_PIN_5;
    GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
}

void task1(void *argument)
{
    for (;;) {
        osSemaphoreRelease(binarySemHandle);
        osDelay(1000);
    }
}

void task2(void *argument)
{
    for (;;) {
        if (osSemaphoreAcquire(binarySemHandle, osWaitForever) == osOK) {
            HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_5);
        }
    }
}

void SemaphoreExampleInit(void)
{
    binarySemHandle = osSemaphoreNew(1, 0, NULL);
    osThreadNew(task1, NULL, NULL);
    osThreadNew(task2, NULL, NULL);
}
